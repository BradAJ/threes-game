import numpy as np
first_board = np.array([[3,1,0,768],[3,0,0,1],[3,2,2,2],[0,0,0,0]])

moves_v1 = [('d', 3, 1),
 ('u', 1, 3),
 ('u', 2, 0),
 ('d', 1, 3),
 ('l', 3, 3),
 ('r', 2, 3),
 ('u', 1, 3),
 ('d', 1, 2),
 ('u', 3, 2),
 ('d', 2, 2),
 ('u', 3, 1),
 ('l', 2, 0),
 ('r', 1, 2),
 ('l', 2, 0),
 ('r', 1, 2),
 ('l', 3, 1),
 ('d', 2, 2),
 ('r', 2, 1),
 ('d', 1, 1),
 ('l', 3, 0),
 ('d', 2, 1),
 ('l', 1, 2),
 ('r', 1, 2),
 ('u', 1, 0),
 ('l', 3, 3),
 ('r', 3, 3),
 ('u', 2, 3),
 ('u', 3, 0),
 ('r', 3, 1),
 ('l', 1, 2),
 ('u', 2, 3),
 ('l', 2, 3),
 ('l', 2, 2),
 ('u', 1, 3),
 ('d', 12, 2),
 ('l', 3, 0),
 ('u', 1, 3),
 ('r', 3, 2),
 ('u', 3, 0),
 ('l', 2, 0),
 ('r', 1, 0),
 ('d', 1, 0),
 ('u', 2, 2),
 ('d', 1, 3),
 ('l', 2, 0),
 ('r', 2, 2),
 ('l', 3, 2),
 ('d', 3, 2),
 ('u', 2, 2),
 ('r', 24, 3)]

##entry error!!
moves_v1[-1] = ('r', 12, 3)

midgame_arr = np.array([[0,0,24,6],[1,48,768,2],[6,24,6,3],[12,0,2,2]])

moves_v2 = [('u', 1, 1),
 ('l', 1, 3),
 ('r', 3, 3),
 ('u', 3, 3),
 ('l', 2, 2),
 ('l', 3, 2),
 ('d', 1, 1),
 ('u', 1, 1),
 ('d', 3, 2),
 ('l', 3, 0),
 ('r', 2, 3),
 ('r', 2, 3),
 ('u', 1, 0),
 ('d', 2, 3),
 ('r', 3, 0),
 ('d', 1, 1),
 ('r', 2, 1),
 ('l', 1, 0),
 ('u', 1, 0),
 ('d', 2, 3),
 ('l', 1, 0),
 ('r', 3, 1),
 ('r', 3, 0),
 ('u', 3, 1),
 ('l', 2, 2),
 ('r', 3, 3),
 ('u', 2, 2),
 ('l', 1, 3),
 ('d', 12, 3),
 ('d', 2, 3),
 ('r', 3, 1),
 ('u', 3, 1),
 ('l', 2, 1),
 ('u', 1, 0),
 ('d', 1, 3),
 ('u', 1, 3),
 ('l', 3, 3),
 ('r', 2, 0),
 ('l', 1, 1),
 ('d', 3, 0),
 ('u', 2, 2),
 ('d', 12, 2),
 ('r', 1, 3),
 ('u', 1, 0),
 ('r', 1, 0),
 ('l', 3, 0),
 ('r', 3, 0),
 ('l', 2, 2),
 ('d', 3, 3),
 ('r', 2, 2),
 ('r', 2, 2),
 ('d', 1, 0),
 ('r', 2, 0),
 ('d', 3, 0),
 ('r', 3, 3),
 ('u', 3, 0),
 ('r', 1, 0),
 ('u', 1, 0),
 ('u', 2, 0),
 ('d', 1, 0),
 ('l', 1, 0),
 ('u', 3, 0),
 ('r', 2, 3),
 ('d', 2, 0),
 ('u', 3, 0),
 ('l', 2, 3),
 ('u', 2, 0),
 ('u', 2, 0),
 ('u', 1, 0),
 ('l', 2, 0),
 ('r', 1, 0),
 ('l', 3, 0),
 ('r', 3, 0),
 ('u', 3, 2),
 ('d', 1, 0),
 ('r', 96, 0),
 ('d', 2, 3),
 ('r', 1, 1),
 ('l', 3, 0),
 ('d', 2, 0),
 ('l', 3, 1),
 ('u', 1, 0),
 ('r', 2, 0),
 ('d', 3, 0),
 ('r', 1, 0),
 ('u', 2, 0),
 ('l', 1, 3),
 ('d', 3, 2),
 ('l', 48, 0),
 ('u', 2, 2),
 ('r', 3, 0),
 ('l', 1, 0),
 ('d', 2, 1),
 ('u', 2, 3),
 ('l', 2, 1),
 ('u', 1, 3),
 ('r', 1, 1),
 ('d', 2, 0),
 ('r', 3, 0),
 ('d', 1, 0),
 ('u', 3, 0),
 ('l', 1, 3),
 ('r', 3, 0),
 ('d', 3, 1),
 ('r', 2, 3),
 ('l', 1, 0),
 ('d', 2, 3),
 ('r', 1, 3),
 ('d', 3, 0),
 ('u', 3, 0),
 ('l', 2, 3),
 ('d', 1, 1),
 ('u', 6, 2),
 ('d', 3, 0),
 ('u', 2, 1),
 ('u', 1, 1),
 ('l', 3, 0),
 ('u', 2, 1),
 ('d', 1, 3),
 ('u', 3, 0),
 ('d', 3, 1),
 ('l', 2, 0),
 ('r', 1, 1),
 ('l', 1, 3),
 ('u', 48, 0),
 ('r', 2, 2),
 ('d', 2, 3),
 ('u', 3, 2),
 ('r', 3, 3),
 ('d', 1, 1),
 ('d', 2, 0),
 ('l', 2, 1),
 ('l', 1, 0),
 ('d', 1, 3),
 ('l', 3, 0),
 ('d', 2, 0),
 ('l', 3, 0),
 ('r', 3, 1),
 ('r', 1, 0),
 ('r', 1, 0),
 ('d', 3, 1),
 ('r', 2, 1),
 ('u', 2, 0),
 ('r', 1, 0),
 ('r', 1, 0),
 ('r', 2, 0),
 ('d', 2, 3),
 ('l', 3, 0),
 ('r', 1, 0),
 ('r', 2, 0),
 ('l', 3, 0),
 ('l', 1, 0),
 ('d', 3, 1),
 ('r', 3, 0),
 ('l', 24, 0)]

 ##entry error2!
moves_v2[-1] = ('l', 12, 0)
midgame_arr2 = np.array([[3,12,1,12],[24,12,96,24],[6,384,24,768],[2,12,48,6]])

moves_v3 = [('d', 3, 1),
 ('l', 3, 1),
 ('u', 1, 3),
 ('u', 2, 2),
 ('l', 3, 1),
 ('r', 1, 3),
 ('r', 3, 3),
 ('d', 2, 3),
 ('r', 2, 3),
 ('d', 2, 3),
 ('l', 1, 0),
 ('u', 1, 3),
 ('r', 24, 2),
 ('d', 1, 1),
 ('l', 2, 3),
 ('l', 2, 3),
 ('u', 3, 0),
 ('r', 1, 0),
 ('d', 1, 0),
 ('r', 3, 2),
 ('d', 2, 0),
 ('u', 3, 0),
 ('d', 1, 1),
 ('r', 2, 0),
 ('l', 3, 0),
 ('r', 1, 1),
 ('u', 1, 0),
 ('l', 3, 0),
 ('d', 3, 3),
 ('r', 2, 0),
 ('d', 2, 0),
 ('l', 1, 0),
 ('u', 3, 0),
 ('u', 3, 0),
 ('r', 1, 0),
 ('d', 2, 0),
 ('l', 2, 3),
 ('d', 12, 0),
 ('r', 3, 0),
 ('u', 2, 0)]

all_moves = moves_v1 + moves_v2 + moves_v3

print(len(all_moves))

from threes import ThreesBoard
game = ThreesBoard(first_board)
for i, mv in enumerate(all_moves):
    mved = game.move(*mv)
    if not mved:
        raise Exception('Failed at ', i)

print(game.board)
print(game.get_score())